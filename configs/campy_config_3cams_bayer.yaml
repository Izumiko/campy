# This expert-level config uses the GPU to compress bayer-pattern video streams in parallel
# GPU performs real-time debayering to convert Bayer to RGB**
# **Allows higher fps output from camera.
# 8-bit Bayer images require lower interface (e.g. USB3) bandwidth than 24-bit RGB

# Video parameters
videoFolder: "./test"
videoFilename: "0.mp4"
frameRate: 80
recTimeInSec: 30

# Camera parameters
numCams: 3
cameraSelection: [0,1,2]
cameraNames: ["Camera1","Camera2","Camera3"]
cameraMake: "basler"
cameraSettings: "./configs/bayer8.pfs"
pixelFormatInput: "bayer_bggr8"
pixelFormatOutput: "rgb0"
frameWidth: 1152
frameHeight: 1024

# Compression parameters
gpuID: 0                              
gpuMake: "nvidia"                     # "nvidia", "amd"                 
codec: "h264"                         # "h264", "h265", or user-defined video codec
quality: "10M"                           
ffmpegLogLevel: "quiet"               # "quiet", "warning", "info"
# ffmpegPath: "/usr/bin/ffmpeg"       # Location of ffmpeg binary if not using Anaconda

# Display parameters
displayFrameCounter: 1
displayFrameRate: 10

# Trigger parameters
startArduino: True
serialPort: "COM3"                    # e.g. "COM3" Win; "/dev/ttyACM0" Linux
digitalPins: [0,1,2]
